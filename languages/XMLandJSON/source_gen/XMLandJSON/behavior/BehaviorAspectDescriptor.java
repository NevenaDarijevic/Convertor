package XMLandJSON.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myXMLAttribute__BehaviorDescriptor = new XMLAttribute__BehaviorDescriptor();
  private final BHDescriptor myXMLElement__BehaviorDescriptor = new XMLElement__BehaviorDescriptor();
  private final BHDescriptor myXMLField__BehaviorDescriptor = new XMLField__BehaviorDescriptor();
  private final BHDescriptor myConvertor__BehaviorDescriptor = new Convertor__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myConvertor__BehaviorDescriptor;
      case 1:
        return myXMLAttribute__BehaviorDescriptor;
      case 2:
        return myXMLElement__BehaviorDescriptor;
      case 3:
        return myXMLField__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x5340cbbc1593490dL, 0xa1b08191311313d1L, 0x587e888911637068L), MetaIdFactory.conceptId(0x5340cbbc1593490dL, 0xa1b08191311313d1L, 0x3605bc724f528794L), MetaIdFactory.conceptId(0x5340cbbc1593490dL, 0xa1b08191311313d1L, 0x3605bc724f528795L), MetaIdFactory.conceptId(0x5340cbbc1593490dL, 0xa1b08191311313d1L, 0x3605bc724f54bc13L)).seal();
}
